// /api/auth/signup.ts
import { NextResponse } from 'next/server';
import { supabase } from '@/lib/supabase';

export async function POST(req: Request) {
  try {
    const { email, password, name } = await req.json();
    const redirectUrl = `http://localhost:3000/api/auth/callback?email=${encodeURIComponent(email)}`;

    const { data, error } = await supabase.auth.signUp({
      email,
      password,
      options: {
        data: { name },
        emailRedirectTo: redirectUrl,
      },
    });

    if (error) {
      console.error('‚ùå SignUp error:', error.message);
      return NextResponse.json({ error: error.message }, { status: 400 });
    }

    if (data.user) {
      await supabase.from('users').insert({
        id: data.user.id,
        email,
        name,
        created_at: new Date().toISOString(),
        provider: 'credentials',
      });
    }

    return NextResponse.json({
      message: '–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —Å—Ç–≤–æ—Ä–µ–Ω–æ. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø–æ—à—Ç—É –¥–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è email.',
    });
  } catch (e) {
    console.error('üî• Fatal signup error:', e);
    return NextResponse.json(
      { error: '–ù–µ–ø–µ—Ä–µ–¥–±–∞—á—É–≤–∞–Ω–∞ –ø–æ–º–∏–ª–∫–∞' },
      { status: 500 }
    );
  }
}
