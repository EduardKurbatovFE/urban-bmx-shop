import { supabase } from '@/lib/supabase';
import NextAuth from 'next-auth';
import Google from 'next-auth/providers/google';

const handler = NextAuth({
  providers: [
    Google({
      clientId: process.env.AUTH_GOOGLE_ID!,
      clientSecret: process.env.AUTH_GOOGLE_SECRET!,
    }),
  ],
  secret: process.env.AUTH_SECRET,

  callbacks: {
    async signIn({ user }) {
      console.log('üîê [signIn] –õ–æ–≥—ñ–Ω –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:', user);

      try {
        const { data, error } = await supabase
          .from('users')
          .select('id')
          .eq('email', user.email)
          .single();

        if (error && error.code !== 'PGRST116') {
          console.error('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–≤—ñ—Ä—Ü—ñ —ñ—Å–Ω—É–≤–∞–Ω–Ω—è:', error.message);
          // –ê–ª–µ –Ω–µ –±–ª–æ–∫—É—î–º–æ –ª–æ–≥—ñ–Ω
        }

        if (!data) {
          console.log('üì¶ –î–æ–¥–∞—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞...');
          const { error: insertError } = await supabase.from('users').insert({
            email: user.email,
            name: user.name,
            image: user.image,
            created_at: new Date().toISOString(),
          });

          if (insertError) {
            console.error(
              '‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—Å—Ç–∞–≤–∫–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:',
              insertError.message
            );
            // –ê–ª–µ –Ω–µ –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ false, –±–æ —Ü–µ –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ
          } else {
            console.log('‚úÖ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–æ–¥–∞–Ω–æ –≤ Supabase!');
          }
        } else {
          console.log('‚ÑπÔ∏è –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–∂–µ —ñ—Å–Ω—É—î:', data.id);
        }

        return true; // –î–æ–∑–≤–æ–ª–∏—Ç–∏ –ª–æ–≥—ñ–Ω —É –±—É–¥—å-—è–∫–æ–º—É –≤–∏–ø–∞–¥–∫—É
      } catch (err) {
        console.error('üî• –§–∞—Ç–∞–ª—å–Ω–∞ –ø–æ–º–∏–ª–∫–∞ –≤ signIn callback:', err);
        return true; // –î–æ–∑–≤–æ–ª–∏—Ç–∏ –ª–æ–≥—ñ–Ω –Ω–∞–≤—ñ—Ç—å —è–∫—â–æ —â–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫
      }
    },
  },
});

export { handler as GET, handler as POST };
